
%% load data into master tables
compileSamplesIntoGlobalTables;

%% set path to include color maps used below
addpath('cbrewer');

%% plot nuclei centroids and clusters in 3D
eggChamberID = unique(nrs.eggChamberID);
for i=1:numel(eggChamberID)
    figure('Name',['egg chamber ',num2str(eggChamberID(i)),...
        ' - Positions of nuclei and clusters']);
    hold;

    % select rows of nucleus and cluster tables that correspond to current
    % egg chamber
    idxEn = nrs.eggChamberID == eggChamberID(i);
    curNrs = nrs(idxEn,:);
    idxCn = cls.eggChamberID == eggChamberID(i);
    curCls = cls(idxCn,:);
    
    nucIDs = unique(curNrs.nucID);
    nNuclei = numel(nucIDs);
    nucleiCmap = cbrewer('qual','Accent',nNuclei);

    scatter3(curNrs.nucCentroid_X,curNrs.nucCentroid_Y,curNrs.nucCentroid_Z,...
        5000,nucleiCmap,'filled','o');
    colormap(nucleiCmap);
    nucTickLabels = cellfun(@num2str,num2cell(nucIDs),'UniformOutput',0);
    colorbar('Ticks',(nucIDs-0.5)/max(nucIDs),'Ticklabels',nucTickLabels);

    xlabel('X in um');
    ylabel('Y in um');
    zlabel('Z in um');
    grid on

    for j=1:numel(nucIDs)
        tmpCls = curCls(curCls.nucID==nucIDs(j),:);
        scatter3(tmpCls.clustCentroid_X,tmpCls.clustCentroid_Y,tmpCls.clustCentroid_Z,...
            100,repmat(nucleiCmap(j,:),size(tmpCls,1),1),'filled','o');
    end
    alpha 0.5
end

%% plot nucleus and nucloplasm intensity as a function of nucleus ID
eggChamberID = unique(nrs.eggChamberID);
ho = 0.1; % horizontal offset from figure corner for plots
vo = 0.1; % vertical offset from figure corner for plots
hs = 0.1; % horizontal spacing between plots
vs = 0.05; % vertical spacing between plots

for i=1:numel(eggChamberID)
    fNucInt = figure('Name',['egg chamber ',num2str(eggChamberID(i)),...
        ' - Nucleus and Nucleoplasm intensities']);

    [nChannels,c] = findChannelNumberFromNucTable(nrs);
    
    nRows = nChannels;
    nCols = 2;
    plotSize = [(1-2*ho-(nCols-1)*hs)/nCols,...
        (1-2*vo-(nRows-1)*vs)/nRows];
    
    for j=1:nChannels
        colIdx = 1;
        pos = [ho+(colIdx-1)*(plotSize(1)+hs),vo+(nChannels - j)*(plotSize(2)+vs),...
            plotSize(1),plotSize(2)];
        aNucInt{j} = axes(fNucInt,'Position',pos);
        if j==1
            title('Nuclear Intensity');
        end
        ylabel(['C',num2str(j),' Int']);
        hold on;

        colIdx = 2;
        pos = [ho+(colIdx-1)*(plotSize(1)+hs),vo+(nChannels - j)*(plotSize(2)+vs),...
            plotSize(1),plotSize(2)];
        aPlasmInt{j} = axes(fNucInt,'Position',pos);
        if j==1
            title('Nucleoplasm Intensity');
        end
        ylabel(['C',num2str(j),' Int']);
        hold on;
    end

    % select rows of nucleus table that correspond to current
    % egg chamber
    idxEn = nrs.eggChamberID == eggChamberID(i);
    curNrs = nrs(idxEn,:);
    
    % set color map
    nucIDs = unique(curNrs.nucID);
    nNuclei = numel(nucIDs);
    nucleiCmap = cbrewer('qual','Accent',nNuclei);

    for j=1:nChannels
        for k=1:nNuclei
            errorbar(aNucInt{j},...
                curNrs.nucID(k),...
                curNrs.(['nucC',num2str(j),'_Mean_eggChamberCorr'])(k),...
                curNrs.(['nucC',num2str(j),'_StdDev_raw'])(k),'o',...
                'Color',nucleiCmap(k,:),'MarkerFaceColor','auto',...
                'MarkerEdgeColor','auto',...
                'DisplayName',['C',num2str(j),'nuc',num2str(k),'mean/StdDev Int']);
            errorbar(aPlasmInt{j},...
                curNrs.nucID(k),...
                curNrs.(['plasmC',num2str(j),'_Mean_eggChamberCorr'])(k),...
                curNrs.(['plasmC',num2str(j),'_StdDev_raw'])(k),'o',...
                'Color',nucleiCmap(k,:),'MarkerFaceColor','auto',...
                'MarkerEdgeColor','auto',...
                'DisplayName',['C',num2str(j),'plasm',num2str(k),'mean/StdDev Int']);
        end
    end

end

%% plot cluster avg intensity and number of clusters for each nucleus
eggChamberID = unique(nrs.eggChamberID);
ho = 0.1; % horizontal offset from figure corner for plots
vo = 0.1; % vertical offset from figure corner for plots
hs = 0.1; % horizontal spacing between plots
vs = 0.05; % vertical spacing between plots

for i=1:numel(eggChamberID)
    fCLustInt = figure('Name',['egg chamber ',num2str(eggChamberID(i)),...
        ' - Nucleus and Nucleoplasm intensities']);

    [nChannels,c] = findChannelNumberFromNucTable(nrs);
    
    nRows = nChannels;
    nCols = 2;
    plotSize = [(1-2*ho-(nCols-1)*hs)/nCols,...
        (1-2*vo-(nRows-1)*vs)/nRows];
    
    for j=1:nChannels
        colIdx = 1;
        pos = [ho+(colIdx-1)*(plotSize(1)+hs),vo+(nChannels - j)*(plotSize(2)+vs),...
            plotSize(1),plotSize(2)];
        aCLustInt{j} = axes(fClustInt,'Position',pos);
        if j==1
            title('Acg Cluster Intensity');
        end
        ylabel(['C',num2str(j),' Int']);
        hold on;

        colIdx = 2;
        if j==1
            pos = [ho+(colIdx-1)*(plotSize(1)+hs),vo+(nChannels - j)*(plotSize(2)+vs),...
                plotSize(1),plotSize(2)];
            aClustNum{j} = axes(fClustInt,'Position',pos);
            
            title('Cluster Number');
        
            ylabel('number');
            hold on;
        end
    end

    % select rows of nucleus table that correspond to current
    % egg chamber
    idxEn = nrs.eggChamberID == eggChamberID(i);
    curNrs = nrs(idxEn,:);
    
    % set color map
    nucIDs = unique(curNrs.nucID);
    nNuclei = numel(nucIDs);
    nucleiCmap = cbrewer('qual','Accent',nNuclei);

    for j=1:nChannels
        for k=1:nNuclei
            errorbar(aClustInt{j},...
                curNrs.nucID(k),...
                curNrs.(['clustC',num2str(j),'_MeanMean_plasmCorr'])(k),...
                curNrs.(['clustC',num2str(j),'_StdDevMean_plasmCorr'])(k),'o',...
                'Color',nucleiCmap(k,:),'MarkerFaceColor','auto',...
                'MarkerEdgeColor','auto',...
                'DisplayName',['C',num2str(j),'cl',num2str(k),'mean/StdDev Int']);
            if j == 1
                plot(aClustNum{j},...
                    curNrs.nucID(k),...
                    curNrs.nClusters(k),...
                    'Color',nucleiCmap(k,:),'MarkerFaceColor','auto',...
                    'MarkerEdgeColor','auto',...
                    'DisplayName',['C',num2str(j),'plasm',num2str(k),'mean/StdDev Int']);
            end
        end
    end

end



